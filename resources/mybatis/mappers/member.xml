<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<resultMap id="memResult" type="memberVO">
		<result property="id" column="id"></result>
		<result property="pwd" column="pwd"></result>
		<result property="name" column="name"></result>
		<result property="email" column="email"></result>
		<result property="joinDate" column="joinDate"></result>
		<result property="user_level" column="user_level"></result>
	</resultMap>

	<select id="idcheck" parameterType="String" resultType="Integer">
		SELECT
		COUNT(*) FROM member
		WHERE
		id = #{id}
	</select>

	<select id="idsearch" parameterType="String" resultType="String">
		SELECT
		id FROM member
		WHERE
		email = #{email}
	</select>

	<update id="updatePwd" parameterType="java.util.Map">
		<![CDATA[
			update member set pwd=#{pwd} where id=#{userid}
		]]>
	</update>

	<select id="selectPwd" resultType="String">
		<![CDATA[
			select pwd from member where id=#{id}
		]]>
	</select>

	<select id="selectMemberByPwd" resultMap="memResult"
		parameterType="String">
		<![CDATA[
			select * from member where pwd=#{pwd}
		]]>
	</select>

	<insert id="insertMember" parameterType="memberVO">
		<![CDATA[
			insert into member(id,pwd,name,email) values(#{id},#{pwd},#{name},#{email})
		]]>
	</insert>

	<select id="searchMember" parameterType="memberVO"
		resultMap="memResult">
		<![CDATA[
			select * from t_member
		]]>
		<where>
			<choose>
				<when
					test="name != '' and name != null and email != '' and email != null">
					name=#{name} and email=#{email}
				</when>
				<when test="name != '' and name != null">
					name=#{name}
				</when>
				<when test="email != '' and email != null">
					email=#{email}
				</when>
			</choose>
		</where>
		order by joinDate desc
	</select>

	<sql id="a">
	<![CDATA[
			select * from t_member
		]]>
	</sql>

	<select id="foreachSelect" resultMap="memResult"
		parameterType="java.util.Map">
		<include refid="a" />
		where name in
		<foreach item="item" collection="list" open="(" separator=","
			close=")">
			#{item}
		</foreach>
		order by joinDate desc
	</select>

	<insert id="foreachInsert" parameterType="java.util.Map">
		<foreach item="item" collection="list" open="INSERT ALL"
			separator=" " close="SELECT * FROM DUAL">
			into t_member(id,pwd,name,email)
			values(#{item.id}, #{item.pwd}, #{item.name}, #{item.email})
		</foreach>
	</insert>

	<select id="loginById" resultType="memberVO"
		parameterType="memberVO">
		<![CDATA[
			select * from member where id = #{id} and pwd = #{pwd}
		]]>
	</select>

		<!-- 회원정보 수정처리 -->
	<update id="memberUpdate">
		<![CDATA[
			update member set 
			pwd=#{pwd}, 
			name=#{name},
			email=#{email}
			where id=#{id}
		]]>
	</update>
	
		<update id="levelUpdate">
		<![CDATA[
			update member set 
			user_level=#{user_level}
			where id=#{id}
		]]>
	</update>
	
	
		<!-- 회원정보 삭제 -->
	<delete id="memberDelete">
		<![CDATA[
			delete from member where id=#{id}
		]]>
	</delete>
	
	<!-- 회원리스트 -->
	<select id="memberList" resultType="MemberVO">
		<![CDATA[
			SELECT
				id AS id,
				pwd AS pwd,
				name AS name,
				email AS email,
				joinDate AS joinDate,
				user_level AS user_level
			FROM member
			ORDER BY joinDate
		]]>
	</select>
	
	
		<!-- 회원 레코드 갯수 -->
	<select id="countArticle" resultType="int">
		SELECT COUNT(*) 
		FROM 
			member
		<!-- WHERE절을 include 태그로 삽입 -->
		<include refid="search"></include>
	</select>

	<!-- 게시글 전체 목록 조회 및 검색조회 -->
	<select id="listAll" resultType="MemberVO">
		<!-- 목록 조회 및 페이징 전체 쿼리 -->
		<include refid="pagingHeader"></include>
			<![CDATA[
			SELECT 				
				id AS id,
				pwd AS pwd,
				name AS name,
				email AS email,
				joinDate AS joinDate,
				user_level AS user_level 
			FROM member
			]]>
		<include refid="search"></include>
			<![CDATA[
				ORDER BY joinDate ASC
			]]>
		<include refid="pagingFooter"></include>
	</select>
	
	<!-- 검색 조건 -->
	<sql id="search">
		<choose>
			<!-- 전체 검색일 경우 -->
			<when test="searchOption == 'all'">
				WHERE id like '%'||#{keyword}||'%'
				OR name like '%'||#{keyword}||'%'
				OR user_level like '%'||#{keyword}||'%'
			</when>
			<!-- 전체 검색 아닐때 -->
			<otherwise>
				WHERE ${searchOption} like '%'||#{keyword}||'%'
			</otherwise>
		</choose>
	</sql>

	<!-- 페이징 -->
	<sql id="pagingHeader">
		SELECT * FROM (
			SELECT ROWNUM RN, A.* FROM (
	</sql>
	
	
	<sql id="pagingFooter">
			) A
		) WHERE RN BETWEEN #{start} AND#{end}
	</sql>
	
	<select id="order" resultType="orderVO"
		parameterType="orderVO">
		<![CDATA[
			select * from book where id = #{id}
		]]>
	</select>
	
	<select id="getRunTime" resultType="String">
		<![CDATA[
			select RUNTIME from MOVIE_INFO where MOVIE_NAME = #{MOVIE_NAME}
		]]>
	</select>

	<delete id="bookDelete">
		<![CDATA[
			delete from book where id=#{id}
		]]>
	</delete>
</mapper>